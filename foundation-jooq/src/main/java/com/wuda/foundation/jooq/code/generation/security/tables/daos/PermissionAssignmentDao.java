/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.security.tables.daos;


import com.wuda.foundation.jooq.code.generation.security.tables.PermissionAssignment;
import com.wuda.foundation.jooq.code.generation.security.tables.records.PermissionAssignmentRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * 权限分配。subject可以代表任何主体，比如用户，或者想要访问其他资源的应用，因此我们可以说user 【IS A】 subject 。target可以代表任何对象，比如file，因此我们可以说file 
 * 【IS A】 target。action可以代表任何操作，比如read/write。subject , target , action这三个实体，不一定是某个具体的单个实体，也可以是一类实体，比如target如果是文件夹，那么可以代表subject对这个文件夹下的所有文件以及子文件夹（递归）都拥有权限；同样
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionAssignmentDao extends DAOImpl<PermissionAssignmentRecord, com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment, ULong> {

    /**
     * Create a new PermissionAssignmentDao without any configuration
     */
    public PermissionAssignmentDao() {
        super(PermissionAssignment.PERMISSION_ASSIGNMENT, com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment.class);
    }

    /**
     * Create a new PermissionAssignmentDao with an attached configuration
     */
    public PermissionAssignmentDao(Configuration configuration) {
        super(PermissionAssignment.PERMISSION_ASSIGNMENT, com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment.class, configuration);
    }

    @Override
    public ULong getId(com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchById(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment fetchOneById(ULong value) {
        return fetchOne(PermissionAssignment.PERMISSION_ASSIGNMENT.ID, value);
    }

    /**
     * Fetch records that have <code>subject_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfSubjectType(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.SUBJECT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subject_type IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchBySubjectType(UByte... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.SUBJECT_TYPE, values);
    }

    /**
     * Fetch records that have <code>subject_identifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfSubjectIdentifier(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.SUBJECT_IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subject_identifier IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchBySubjectIdentifier(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.SUBJECT_IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>target_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfTargetType(UShort lowerInclusive, UShort upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.TARGET_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_type IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByTargetType(UShort... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.TARGET_TYPE, values);
    }

    /**
     * Fetch records that have <code>target_identifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfTargetIdentifier(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.TARGET_IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_identifier IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByTargetIdentifier(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.TARGET_IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>action_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfActionType(UShort lowerInclusive, UShort upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.ACTION_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>action_type IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByActionType(UShort... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.ACTION_TYPE, values);
    }

    /**
     * Fetch records that have <code>action_identifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfActionIdentifier(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.ACTION_IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>action_identifier IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByActionIdentifier(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.ACTION_IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>effect BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfEffect(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.EFFECT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>effect IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByEffect(Boolean... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.EFFECT, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfVersion(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByVersion(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.VERSION, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByCreateTime(LocalDateTime... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>create_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfCreateUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.CREATE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByCreateUserId(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.CREATE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchRangeOfIsDeleted(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(PermissionAssignment.PERMISSION_ASSIGNMENT.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.security.tables.pojos.PermissionAssignment> fetchByIsDeleted(ULong... values) {
        return fetch(PermissionAssignment.PERMISSION_ASSIGNMENT.IS_DELETED, values);
    }
}
