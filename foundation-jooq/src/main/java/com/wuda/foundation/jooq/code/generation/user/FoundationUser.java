/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.user;


import com.wuda.foundation.jooq.code.generation.user.tables.IndividualUserGeneral;
import com.wuda.foundation.jooq.code.generation.user.tables.UserBelongsToGroupGeneral;
import com.wuda.foundation.jooq.code.generation.user.tables.UserBelongsToGroupRole;
import com.wuda.foundation.jooq.code.generation.user.tables.UserCore;
import com.wuda.foundation.jooq.code.generation.user.tables.UserCredential;
import com.wuda.foundation.jooq.code.generation.user.tables.UserEmail;
import com.wuda.foundation.jooq.code.generation.user.tables.UserPhone;
import com.wuda.foundation.jooq.code.generation.user.tables.UserPrincipal;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FoundationUser extends SchemaImpl {

    private static final long serialVersionUID = 92084194;

    /**
     * The reference instance of <code>foundation_user</code>
     */
    public static final FoundationUser FOUNDATION_USER = new FoundationUser();

    /**
     * 个人用户－基本信息
     */
    public final IndividualUserGeneral INDIVIDUAL_USER_GENERAL = IndividualUserGeneral.INDIVIDUAL_USER_GENERAL;

    /**
     * 用户在组中的基本信息
     */
    public final UserBelongsToGroupGeneral USER_BELONGS_TO_GROUP_GENERAL = UserBelongsToGroupGeneral.USER_BELONGS_TO_GROUP_GENERAL;

    /**
     * 用户在所属的组中的角色
     */
    public final UserBelongsToGroupRole USER_BELONGS_TO_GROUP_ROLE = UserBelongsToGroupRole.USER_BELONGS_TO_GROUP_ROLE;

    /**
     * 用户核心信息。用户有很多类型，比如一种分类方法是把用户分成个人用户和企业用户，而不同类型的用户需要的字段不一样，但是他们都是用户，即 is-a user。这个表属于所有用户的基本信息，其他不同类型的用户有自己专属的表，然后用用户ID关联回这个表。这样做还有一个好处，那就是其他表中的用户ID都统一关联回这个表，这样用户ID就不会有歧义了。
     */
    public final UserCore USER_CORE = UserCore.USER_CORE;

    /**
     * 比如password，public key等都是credential
     */
    public final UserCredential USER_CREDENTIAL = UserCredential.USER_CREDENTIAL;

    /**
     * 用户的email
     */
    public final UserEmail USER_EMAIL = UserEmail.USER_EMAIL;

    /**
     * 用户的电话
     */
    public final UserPhone USER_PHONE = UserPhone.USER_PHONE;

    /**
     * 用户的身份标记，比如用户名就是一种principal
     */
    public final UserPrincipal USER_PRINCIPAL = UserPrincipal.USER_PRINCIPAL;

    /**
     * No further instances allowed
     */
    private FoundationUser() {
        super("foundation_user", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            IndividualUserGeneral.INDIVIDUAL_USER_GENERAL,
            UserBelongsToGroupGeneral.USER_BELONGS_TO_GROUP_GENERAL,
            UserBelongsToGroupRole.USER_BELONGS_TO_GROUP_ROLE,
            UserCore.USER_CORE,
            UserCredential.USER_CREDENTIAL,
            UserEmail.USER_EMAIL,
            UserPhone.USER_PHONE,
            UserPrincipal.USER_PRINCIPAL);
    }
}
